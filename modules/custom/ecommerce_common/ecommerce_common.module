<?php

function ecommerce_common_form_alter(&$form, &$form_state, $form_id) {
  //dsm($form);
}

function ecommerce_common_block_view_alter(&$data, $block) {
  if ($block->delta == 1 && $block->module == 'simplenews' || $block->delta == 'client-block-47') {
    //dsm($block);
   // dsm($data);
  }
}
/**
 * Implements hook_init().
 */
function ecommerce_common_init() {
  $path = drupal_get_path('module', 'ecommerce_common');
  drupal_add_js($path . '/theme/js/ecommerce_common.js');  
  $node = menu_get_object();
  if (isset($node) && $node->type == 'product') {
    drupal_add_js($path . '/theme/js/gallery.js');  
  }
}

/**
 * Implements hook_page_alter().
 */
function ecommerce_common_page_alter(&$data) {  
  if (isset($data['content']['system_main']['nodes'])) {
    global $user;
    $nids = element_children($data['content']['system_main']['nodes']);
    $nid = $nids[0];
    if (isset($data['content']['system_main']['nodes'][$nid]['field_product'])){
      if ($user->uid == 0) {
        $comments = $data['content']['system_main']['nodes'][$nid]['links']['comment'];
      }
      else {
        $comments = $data['content']['system_main']['nodes'][$nid]['comments'];
      }
      unset($data['content']['system_main']['nodes'][$nid]['comments']);
      unset($data['content']['system_main']['nodes'][$nid]['links']['comment']);
      $overrides = array('style' => 'nostyle', 'active' => 0); // Override some of the settings for the QuickTabs instance.
      $custom_tabs = array(
        array(
          'title' => 'Comments',
          'contents' => $comments,
          'weight' => 2
        ),
        array(
          'title' => 'Description',
          'contents' => $data['content']['system_main']['nodes'][$nid]['product:field_description']['#items'][0]['value'],
          'weight' => 0
        ),
        array(
          'title' => 'Specifications',
          'contents' => $data['content']['system_main']['nodes'][$nid]['product:field_specifications']['#items'][0]['value'],
          'weight' => 1
        )
      );
      unset($data['content']['system_main']['nodes'][$nid]['product:field_specifications']);
      unset($data['content']['system_main']['nodes'][$nid]['product:field_description']);
      $data['content']['quicktabs_product_information'] = array(
        'content' => quicktabs_build_quicktabs('node_activities', $overrides, $custom_tabs),
        '#weight' => -10,
      );
    }
  }
}

/**
 * Implements hook_node_view().
 */
function ecommerce_common_node_view($node, $view_mode, $langcode) {
  if ($node->type == 'product') {
    $node_wrapper = entity_metadata_wrapper('node', $node);
    foreach ($node_wrapper->field_tags as $tag_wrapper) {
      $tag_wrapper->field_count = $tag_wrapper->field_count->value() + 1;
      $tag_wrapper->save();
    }
    foreach ($node_wrapper->field_category as $category_wrapper) {
      if (count(taxonomy_get_parents($category_wrapper->tid->value())) != 0) {
        $category_wrapper->field_count = $category_wrapper->field_count->value() + 1;
        $category_wrapper->save();
      }
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function ecommerce_common_form_user_login_block_alter(&$form, $form_state){
  $form['links']['#markup'] = '';
  $form['actions']['submit']['#value'] = t('Login');
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function ecommerce_common_form_taxonomy_form_term_alter(&$form, &$form_state) {
  unset($form['field_count']);
}

/**
 * Implements hook_node_view_alter().
 */
function ecommerce_common_node_view_alter(&$build) {
  unset($build['comments']['comment_form']['subject']);
  $build['comments']['comment_form']['actions']['submit']['#value'] = t('SUBMIT');
  unset($build['comments']['comment_form']['actions']['preview']);
  hide($build['comments']['comment_form']['author']);
}
